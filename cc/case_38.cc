

#include <stdio.h>
#include "ap_fixed.h"

void case_38(
    ap_int<16> in_data[24],
    ap_int<16> out_data[16]
)
{

#pragma HLS array_partition variable=in_data complete
#pragma HLS array_partition variable=out_data complete

    

ap_int<6> in1;
in1.range(5, 0) = in_data[0].range(5, 0);
ap_int<9> in2;
in2.range(8, 0) = in_data[1].range(8, 0);
ap_int<11> in3;
in3.range(10, 0) = in_data[2].range(10, 0);
ap_int<9> in4;
in4.range(8, 0) = in_data[3].range(8, 0);
ap_int<2> in5;
in5.range(1, 0) = in_data[4].range(1, 0);
ap_int<13> in6;
in6.range(12, 0) = in_data[5].range(12, 0);
ap_int<13> in7;
in7.range(12, 0) = in_data[6].range(12, 0);
ap_int<14> in8;
in8.range(13, 0) = in_data[7].range(13, 0);
ap_int<4> in9;
in9.range(3, 0) = in_data[8].range(3, 0);
ap_int<9> in10;
in10.range(8, 0) = in_data[9].range(8, 0);
ap_int<6> in11;
in11.range(5, 0) = in_data[10].range(5, 0);
ap_int<2> in12;
in12.range(1, 0) = in_data[11].range(1, 0);
ap_int<5> in13;
in13.range(4, 0) = in_data[12].range(4, 0);
ap_int<14> in14;
in14.range(13, 0) = in_data[13].range(13, 0);
ap_int<11> in15;
in15.range(10, 0) = in_data[14].range(10, 0);
ap_int<2> in16;
in16.range(1, 0) = in_data[15].range(1, 0);
ap_int<9> in17;
in17.range(8, 0) = in_data[16].range(8, 0);
ap_int<15> in18;
in18.range(14, 0) = in_data[17].range(14, 0);
ap_int<11> in19;
in19.range(10, 0) = in_data[18].range(10, 0);
ap_int<3> in20;
in20.range(2, 0) = in_data[19].range(2, 0);
ap_int<14> in21;
in21.range(13, 0) = in_data[20].range(13, 0);
ap_int<13> in22;
in22.range(12, 0) = in_data[21].range(12, 0);
ap_int<2> in23;
in23.range(1, 0) = in_data[22].range(1, 0);
ap_int<7> in24;
in24.range(6, 0) = in_data[23].range(6, 0);

ap_int<6> m25;
ap_int<8> m26;
ap_int<15> m27;
ap_int<2> m28;
ap_int<4> m29;
ap_int<8> m30;
ap_int<16> m31;
ap_int<12> m32;
ap_int<3> m33;
ap_int<2> m34;
ap_int<12> m35;
ap_int<14> m36;
ap_int<8> m37;
ap_int<13> m38;
ap_int<10> m39;
ap_int<6> m40;
ap_int<10> m41;
ap_int<6> m42;
ap_int<13> m43;
ap_int<13> m44;
ap_int<6> m45;
ap_int<8> m46;
ap_int<5> m47;
ap_int<12> m48;
ap_int<10> m49;
ap_int<13> m50;
ap_int<15> m51;
ap_int<16> m52;
ap_int<11> m53;
ap_int<10> m54;
ap_int<4> m55;
ap_int<10> m56;
ap_int<10> m57;
ap_int<15> m58;
ap_int<12> m59;
ap_int<11> m60;
ap_int<15> m61;
ap_int<7> m62;
ap_int<5> m63;
ap_int<6> m64;
ap_int<6> m65;
ap_int<10> m66;
ap_int<9> m67;
ap_int<7> m68;
ap_int<6> m69;
ap_int<11> m70;
ap_int<8> m71;
ap_int<9> m72;
ap_int<9> m73;
ap_int<12> m74;
ap_int<15> m75;
ap_int<9> m76;
ap_int<5> m77;
ap_int<9> m78;
ap_int<13> m79;
ap_int<11> m80;
ap_int<11> m81;
ap_int<9> m82;
ap_int<15> m83;
ap_int<9> m84;
ap_int<7> m85;
ap_int<6> m86;
ap_int<13> m87;
ap_int<10> m88;
ap_int<7> m89;
ap_int<6> m90;
ap_int<11> m91;
ap_int<7> m92;
ap_int<9> m93;
ap_int<8> m94;
ap_int<7> m95;
ap_int<16> m96;
ap_int<10> m97;
ap_int<5> m98;
ap_int<4> m99;
ap_int<12> m100;
ap_int<8> m101;
ap_int<12> m102;
ap_int<9> m103;
ap_int<5> m104;
ap_int<5> m105;
ap_int<13> m106;
ap_int<6> m107;
ap_int<6> m108;
ap_int<4> m109;
ap_int<2> m110;
ap_int<7> m111;
ap_int<4> m112;
ap_int<4> m113;

m25 = in14 * in22;
m26 = in20 + m25;
m27 = in23 * in18;
m28 = in12 * in24;
m29 = in12 * in16;
m30 = in7 * in23;
m31 = in15 * m30;
m32 = in13 * m27;
m33 = in23 * in12;
m34 = m28 * in11;
m35 = in23 * in21;
m36 = in13 * m32;
m37 = m27 * m31;
m38 = m33 + m35;
m39 = in15 * in20;
m40 = m34 * in19;
m41 = m37 * m37;
m42 = m26 + m27;
m43 = m25 * in24;
m44 = in21 + m38;
m45 = m33 + in21;
m46 = m43 * m44;
m47 = m46 + m45;
m48 = m41 * m30;
m49 = m34 * m41;
m50 = m31 * m35;
m51 = m39 * m43;
m52 = m41 + m37;
m53 = m48 * m30;
m54 = m45 * m37;
m55 = m33 + m37;
m56 = m52 * m54;
m57 = m55 + m44;
m58 = m35 * m36;
m59 = m50 + m54;
m60 = m49 * m57;
m61 = m39 * m54;
m62 = m58 * m47;
m63 = m62 * m56;
m64 = m63 * m54;
m65 = m63 * m56;
m66 = m61 * m44;
m67 = m63 * m53;
m68 = m51 * m45;
m69 = m57 * m53;
m70 = m67 * m69;
m71 = m52 * m59;
m72 = m56 + m62;
m73 = m72 * m50;
m74 = m58 * m57;
m75 = m61 + m68;
m76 = m56 + m56;
m77 = m71 * m68;
m78 = m57 * m61;
m79 = m70 * m61;
m80 = m58 * m57;
m81 = m77 * m74;
m82 = m80 * m72;
m83 = m79 * m64;
m84 = m64 * m76;
m85 = m80 * m70;
m86 = m82 + m62;
m87 = m69 * m80;
m88 = m77 * m79;
m89 = m70 * m86;
m90 = m79 * m86;
m91 = m89 * m83;
m92 = m77 * m90;
m93 = m79 * m70;
m94 = m70 * m76;
m95 = m81 * m85;
m96 = m89 + m73;
m97 = m81 * m74;
m98 = m93 * m74;
m99 = m94 * m77;
m100 = m78 * m90;
m101 = m81 * m96;
m102 = m92 * m86;
m103 = m101 * m87;
m104 = m98 * m99;
m105 = m93 * m101;
m106 = m105 + m100;
m107 = m95 * m94;
m108 = m93 * m105;
m109 = m101 + m104;
m110 = m109 * m107;
m111 = m91 * m110;
m112 = m95 * m102;
m113 = m92 * m93;

out_data[0] = m29;
out_data[1] = m40;
out_data[2] = m42;
out_data[3] = m60;
out_data[4] = m65;
out_data[5] = m66;
out_data[6] = m75;
out_data[7] = m84;
out_data[8] = m88;
out_data[9] = m97;
out_data[10] = m103;
out_data[11] = m106;
out_data[12] = m108;
out_data[13] = m111;
out_data[14] = m112;
out_data[15] = m113;


}
    