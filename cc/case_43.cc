

#include <stdio.h>
#include "ap_fixed.h"

void case_43(
    ap_int<16> in_data[26],
    ap_int<16> out_data[20]
)
{

#pragma HLS array_partition variable=in_data complete
#pragma HLS array_partition variable=out_data complete

    

ap_int<14> in1;
in1.range(13, 0) = in_data[0].range(13, 0);
ap_int<9> in2;
in2.range(8, 0) = in_data[1].range(8, 0);
ap_int<9> in3;
in3.range(8, 0) = in_data[2].range(8, 0);
ap_int<2> in4;
in4.range(1, 0) = in_data[3].range(1, 0);
ap_int<8> in5;
in5.range(7, 0) = in_data[4].range(7, 0);
ap_int<2> in6;
in6.range(1, 0) = in_data[5].range(1, 0);
ap_int<15> in7;
in7.range(14, 0) = in_data[6].range(14, 0);
ap_int<7> in8;
in8.range(6, 0) = in_data[7].range(6, 0);
ap_int<14> in9;
in9.range(13, 0) = in_data[8].range(13, 0);
ap_int<12> in10;
in10.range(11, 0) = in_data[9].range(11, 0);
ap_int<12> in11;
in11.range(11, 0) = in_data[10].range(11, 0);
ap_int<10> in12;
in12.range(9, 0) = in_data[11].range(9, 0);
ap_int<2> in13;
in13.range(1, 0) = in_data[12].range(1, 0);
ap_int<14> in14;
in14.range(13, 0) = in_data[13].range(13, 0);
ap_int<15> in15;
in15.range(14, 0) = in_data[14].range(14, 0);
ap_int<16> in16;
in16.range(15, 0) = in_data[15].range(15, 0);
ap_int<3> in17;
in17.range(2, 0) = in_data[16].range(2, 0);
ap_int<8> in18;
in18.range(7, 0) = in_data[17].range(7, 0);
ap_int<7> in19;
in19.range(6, 0) = in_data[18].range(6, 0);
ap_int<5> in20;
in20.range(4, 0) = in_data[19].range(4, 0);
ap_int<4> in21;
in21.range(3, 0) = in_data[20].range(3, 0);
ap_int<9> in22;
in22.range(8, 0) = in_data[21].range(8, 0);
ap_int<15> in23;
in23.range(14, 0) = in_data[22].range(14, 0);
ap_int<14> in24;
in24.range(13, 0) = in_data[23].range(13, 0);
ap_int<15> in25;
in25.range(14, 0) = in_data[24].range(14, 0);
ap_int<6> in26;
in26.range(5, 0) = in_data[25].range(5, 0);

ap_int<14> m27;
ap_int<7> m28;
ap_int<7> m29;
ap_int<6> m30;
ap_int<3> m31;
ap_int<7> m32;
ap_int<6> m33;
ap_int<14> m34;
ap_int<13> m35;
ap_int<13> m36;
ap_int<8> m37;
ap_int<10> m38;
ap_int<9> m39;
ap_int<9> m40;
ap_int<12> m41;
ap_int<16> m42;
ap_int<9> m43;
ap_int<12> m44;
ap_int<13> m45;
ap_int<8> m46;
ap_int<9> m47;
ap_int<16> m48;
ap_int<7> m49;
ap_int<6> m50;
ap_int<6> m51;
ap_int<6> m52;
ap_int<5> m53;
ap_int<4> m54;
ap_int<9> m55;
ap_int<5> m56;
ap_int<3> m57;
ap_int<13> m58;
ap_int<12> m59;
ap_int<9> m60;
ap_int<3> m61;
ap_int<12> m62;
ap_int<11> m63;
ap_int<6> m64;
ap_int<15> m65;
ap_int<15> m66;
ap_int<4> m67;
ap_int<5> m68;
ap_int<10> m69;
ap_int<5> m70;
ap_int<15> m71;
ap_int<16> m72;
ap_int<5> m73;
ap_int<7> m74;
ap_int<6> m75;
ap_int<7> m76;
ap_int<10> m77;
ap_int<3> m78;
ap_int<13> m79;
ap_int<9> m80;
ap_int<4> m81;
ap_int<8> m82;
ap_int<14> m83;
ap_int<5> m84;
ap_int<16> m85;
ap_int<10> m86;
ap_int<3> m87;
ap_int<8> m88;
ap_int<11> m89;
ap_int<13> m90;
ap_int<12> m91;
ap_int<3> m92;
ap_int<6> m93;
ap_int<5> m94;
ap_int<6> m95;
ap_int<7> m96;
ap_int<12> m97;
ap_int<7> m98;
ap_int<4> m99;
ap_int<13> m100;
ap_int<14> m101;
ap_int<14> m102;
ap_int<8> m103;
ap_int<11> m104;
ap_int<10> m105;
ap_int<6> m106;
ap_int<12> m107;
ap_int<16> m108;
ap_int<11> m109;
ap_int<16> m110;
ap_int<13> m111;
ap_int<5> m112;
ap_int<13> m113;
ap_int<9> m114;
ap_int<5> m115;
ap_int<12> m116;
ap_int<6> m117;
ap_int<5> m118;
ap_int<11> m119;
ap_int<8> m120;
ap_int<16> m121;
ap_int<4> m122;
ap_int<16> m123;
ap_int<10> m124;
ap_int<15> m125;
ap_int<15> m126;
ap_int<4> m127;
ap_int<10> m128;
ap_int<6> m129;
ap_int<12> m130;
ap_int<13> m131;
ap_int<7> m132;
ap_int<7> m133;
ap_int<10> m134;
ap_int<12> m135;
ap_int<9> m136;
ap_int<11> m137;
ap_int<9> m138;
ap_int<6> m139;
ap_int<11> m140;
ap_int<16> m141;

m27 = in21 * in23;
m28 = in14 * in25;
m29 = in21 * m27;
m30 = in23 * in19;
m31 = in6 * m28;
m32 = in22 * m29;
m33 = m30 + in8;
m34 = in25 + in23;
m35 = in24 + in23;
m36 = in11 * in15;
m37 = m30 * m36;
m38 = in20 * m37;
m39 = m32 * in26;
m40 = in26 + in15;
m41 = in24 * m39;
m42 = in26 * m41;
m43 = in18 * in20;
m44 = m27 + m29;
m45 = m40 * m29;
m46 = m35 * m43;
m47 = m30 * m38;
m48 = m39 * m46;
m49 = m33 + m34;
m50 = m46 * m29;
m51 = m34 * m36;
m52 = m42 * m38;
m53 = m49 * m42;
m54 = m49 + m32;
m55 = m52 * m47;
m56 = m51 * m31;
m57 = m53 * m54;
m58 = m53 * m55;
m59 = m52 + m52;
m60 = m49 * m57;
m61 = m37 * m57;
m62 = m41 * m58;
m63 = m54 * m62;
m64 = m58 + m55;
m65 = m55 * m51;
m66 = m59 * m56;
m67 = m50 * m41;
m68 = m63 + m51;
m69 = m52 * m50;
m70 = m47 * m58;
m71 = m59 * m63;
m72 = m55 * m58;
m73 = m70 * m67;
m74 = m64 * m62;
m75 = m51 * m49;
m76 = m56 * m66;
m77 = m76 * m67;
m78 = m73 + m52;
m79 = m59 * m53;
m80 = m63 + m79;
m81 = m67 * m70;
m82 = m61 * m56;
m83 = m75 + m60;
m84 = m82 * m68;
m85 = m64 * m71;
m86 = m62 * m70;
m87 = m75 * m74;
m88 = m87 + m72;
m89 = m84 * m76;
m90 = m78 * m72;
m91 = m74 * m75;
m92 = m81 * m89;
m93 = m72 * m73;
m94 = m81 * m72;
m95 = m93 * m92;
m96 = m75 * m75;
m97 = m92 * m86;
m98 = m77 * m80;
m99 = m77 * m76;
m100 = m89 * m97;
m101 = m99 * m86;
m102 = m81 + m83;
m103 = m90 * m102;
m104 = m91 * m95;
m105 = m83 * m101;
m106 = m81 * m90;
m107 = m97 * m103;
m108 = m105 * m106;
m109 = m95 * m85;
m110 = m108 * m91;
m111 = m86 * m90;
m112 = m97 + m105;
m113 = m97 + m102;
m114 = m98 * m99;
m115 = m112 * m100;
m116 = m113 * m98;
m117 = m98 * m95;
m118 = m108 * m94;
m119 = m109 + m117;
m120 = m101 * m113;
m121 = m100 * m114;
m122 = m120 * m117;
m123 = m116 * m103;
m124 = m118 * m116;
m125 = m106 * m116;
m126 = m120 * m104;
m127 = m120 * m124;
m128 = m119 * m120;
m129 = m115 * m107;
m130 = m108 * m125;
m131 = m127 * m123;
m132 = m116 * m115;
m133 = m121 * m109;
m134 = m108 * m125;
m135 = m124 + m131;
m136 = m121 + m112;
m137 = m125 * m124;
m138 = m132 * m133;
m139 = m120 * m118;
m140 = m119 * m129;
m141 = m123 + m128;

out_data[0] = m44;
out_data[1] = m45;
out_data[2] = m48;
out_data[3] = m65;
out_data[4] = m69;
out_data[5] = m88;
out_data[6] = m96;
out_data[7] = m110;
out_data[8] = m111;
out_data[9] = m122;
out_data[10] = m126;
out_data[11] = m130;
out_data[12] = m134;
out_data[13] = m135;
out_data[14] = m136;
out_data[15] = m137;
out_data[16] = m138;
out_data[17] = m139;
out_data[18] = m140;
out_data[19] = m141;


}
    