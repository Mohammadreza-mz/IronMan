

#include <stdio.h>
#include "ap_fixed.h"

void stencil3d_4_4_4(
ap_int<16> in_data[34],
ap_int<16> out_data[8]
)
{

#pragma HLS array_partition variable=in_data complete
#pragma HLS array_partition variable=out_data complete



ap_int<16> in11;
in11.range(15, 0) = in_data[0].range(15, 0);
ap_int<16> in13;
in13.range(15, 0) = in_data[1].range(15, 0);
ap_int<16> in15;
in15.range(15, 0) = in_data[2].range(15, 0);
ap_int<16> in17;
in17.range(15, 0) = in_data[3].range(15, 0);
ap_int<16> in19;
in19.range(15, 0) = in_data[4].range(15, 0);
ap_int<16> in21;
in21.range(15, 0) = in_data[5].range(15, 0);
ap_int<16> in23;
in23.range(15, 0) = in_data[6].range(15, 0);
ap_int<16> in29;
in29.range(15, 0) = in_data[7].range(15, 0);
ap_int<16> in31;
in31.range(15, 0) = in_data[8].range(15, 0);
ap_int<16> in37;
in37.range(15, 0) = in_data[9].range(15, 0);
ap_int<16> in39;
in39.range(15, 0) = in_data[10].range(15, 0);
ap_int<16> in41;
in41.range(15, 0) = in_data[11].range(15, 0);
ap_int<16> in43;
in43.range(15, 0) = in_data[12].range(15, 0);
ap_int<16> in45;
in45.range(15, 0) = in_data[13].range(15, 0);
ap_int<16> in57;
in57.range(15, 0) = in_data[14].range(15, 0);
ap_int<16> in59;
in59.range(15, 0) = in_data[15].range(15, 0);
ap_int<16> in61;
in61.range(15, 0) = in_data[16].range(15, 0);
ap_int<16> in63;
in63.range(15, 0) = in_data[17].range(15, 0);
ap_int<16> in75;
in75.range(15, 0) = in_data[18].range(15, 0);
ap_int<16> in77;
in77.range(15, 0) = in_data[19].range(15, 0);
ap_int<16> in79;
in79.range(15, 0) = in_data[20].range(15, 0);
ap_int<16> in81;
in81.range(15, 0) = in_data[21].range(15, 0);
ap_int<16> in93;
in93.range(15, 0) = in_data[22].range(15, 0);
ap_int<16> in95;
in95.range(15, 0) = in_data[23].range(15, 0);
ap_int<16> in97;
in97.range(15, 0) = in_data[24].range(15, 0);
ap_int<16> in109;
in109.range(15, 0) = in_data[25].range(15, 0);
ap_int<16> in111;
in111.range(15, 0) = in_data[26].range(15, 0);
ap_int<16> in113;
in113.range(15, 0) = in_data[27].range(15, 0);
ap_int<16> in125;
in125.range(15, 0) = in_data[28].range(15, 0);
ap_int<16> in127;
in127.range(15, 0) = in_data[29].range(15, 0);
ap_int<16> in129;
in129.range(15, 0) = in_data[30].range(15, 0);
ap_int<16> in141;
in141.range(15, 0) = in_data[31].range(15, 0);
ap_int<16> in143;
in143.range(15, 0) = in_data[32].range(15, 0);
ap_int<16> in145;
in145.range(15, 0) = in_data[33].range(15, 0);

ap_int<16> m24;
ap_int<16> m25;
ap_int<16> m26;
ap_int<16> m27;
ap_int<16> m28;
ap_int<16> m30;
ap_int<16> m32;
ap_int<16> m33;
ap_int<16> m35;
ap_int<16> m46;
ap_int<16> m47;
ap_int<16> m48;
ap_int<16> m49;
ap_int<16> m50;
ap_int<16> m51;
ap_int<16> m52;
ap_int<16> m53;
ap_int<16> m55;
ap_int<16> m64;
ap_int<16> m65;
ap_int<16> m66;
ap_int<16> m67;
ap_int<16> m68;
ap_int<16> m69;
ap_int<16> m70;
ap_int<16> m71;
ap_int<16> m73;
ap_int<16> m82;
ap_int<16> m83;
ap_int<16> m84;
ap_int<16> m85;
ap_int<16> m86;
ap_int<16> m87;
ap_int<16> m88;
ap_int<16> m89;
ap_int<16> m91;
ap_int<16> m98;
ap_int<16> m99;
ap_int<16> m100;
ap_int<16> m101;
ap_int<16> m102;
ap_int<16> m103;
ap_int<16> m104;
ap_int<16> m105;
ap_int<16> m107;
ap_int<16> m114;
ap_int<16> m115;
ap_int<16> m116;
ap_int<16> m117;
ap_int<16> m118;
ap_int<16> m119;
ap_int<16> m120;
ap_int<16> m121;
ap_int<16> m123;
ap_int<16> m130;
ap_int<16> m131;
ap_int<16> m132;
ap_int<16> m133;
ap_int<16> m134;
ap_int<16> m135;
ap_int<16> m136;
ap_int<16> m137;
ap_int<16> m139;
ap_int<16> m146;
ap_int<16> m147;
ap_int<16> m148;
ap_int<16> m149;
ap_int<16> m150;
ap_int<16> m151;
ap_int<16> m152;
ap_int<16> m153;
ap_int<16> m155;

m24 = in15 + in17;
m25 = m24 + in13;
m26 = in21 + in23;
m27 = m26 + in19;
m28 = m27 + m25;
m30 = in11 * in29;
m32 = in31 * m28;
m33 = m30 + m32;
m46 = in39 + in41;
m47 = m46 + in37;
m48 = in45 + in11;
m49 = m48 + in43;
m50 = m49 + m47;
m51 = in21 * in29;
m52 = in31 * m50;
m53 = m51 + m52;
m64 = in59 + in61;
m65 = m64 + in57;
m66 = in41 + in63;
m67 = m66 + in11;
m68 = m67 + m65;
m69 = in17 * in29;
m70 = in31 * m68;
m71 = m69 + m70;
m82 = in77 + in79;
m83 = m82 + in75;
m84 = in81 + in17;
m85 = m84 + in21;
m86 = m85 + m83;
m87 = in41 * in29;
m88 = in31 * m86;
m89 = m87 + m88;
m98 = in11 + in57;
m99 = m98 + in93;
m100 = in37 + in97;
m101 = m100 + in95;
m102 = m101 + m99;
m103 = in13 * in29;
m104 = in31 * m102;
m105 = m103 + m104;
m114 = in21 + in75;
m115 = m114 + in109;
m116 = in113 + in13;
m117 = m116 + in111;
m118 = m117 + m115;
m119 = in37 * in29;
m120 = in31 * m118;
m121 = m119 + m120;
m130 = in17 + in127;
m131 = m130 + in125;
m132 = in75 + in129;
m133 = m132 + in13;
m134 = m133 + m131;
m135 = in57 * in29;
m136 = in31 * m134;
m137 = m135 + m136;
m146 = in41 + in143;
m147 = m146 + in141;
m148 = in145 + in57;
m149 = m148 + in37;
m150 = m149 + m147;
m151 = in75 * in29;
m152 = in31 * m150;
m153 = m151 + m152;

m35 = m33;
out_data[0] = m35;
m55 = m53;
out_data[1] = m55;
m73 = m71;
out_data[2] = m73;
m91 = m89;
out_data[3] = m91;
m107 = m105;
out_data[4] = m107;
m123 = m121;
out_data[5] = m123;
m139 = m137;
out_data[6] = m139;
m155 = m153;
out_data[7] = m155;


}
