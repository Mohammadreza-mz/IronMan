

#include <stdio.h>
#include "ap_fixed.h"

void case_33(
    ap_int<16> in_data[15],
    ap_int<16> out_data[17]
)
{

#pragma HLS array_partition variable=in_data complete
#pragma HLS array_partition variable=out_data complete

    

ap_int<9> in1;
in1.range(8, 0) = in_data[0].range(8, 0);
ap_int<16> in2;
in2.range(15, 0) = in_data[1].range(15, 0);
ap_int<13> in3;
in3.range(12, 0) = in_data[2].range(12, 0);
ap_int<7> in4;
in4.range(6, 0) = in_data[3].range(6, 0);
ap_int<15> in5;
in5.range(14, 0) = in_data[4].range(14, 0);
ap_int<13> in6;
in6.range(12, 0) = in_data[5].range(12, 0);
ap_int<13> in7;
in7.range(12, 0) = in_data[6].range(12, 0);
ap_int<2> in8;
in8.range(1, 0) = in_data[7].range(1, 0);
ap_int<10> in9;
in9.range(9, 0) = in_data[8].range(9, 0);
ap_int<10> in10;
in10.range(9, 0) = in_data[9].range(9, 0);
ap_int<4> in11;
in11.range(3, 0) = in_data[10].range(3, 0);
ap_int<12> in12;
in12.range(11, 0) = in_data[11].range(11, 0);
ap_int<7> in13;
in13.range(6, 0) = in_data[12].range(6, 0);
ap_int<15> in14;
in14.range(14, 0) = in_data[13].range(14, 0);
ap_int<15> in15;
in15.range(14, 0) = in_data[14].range(14, 0);

ap_int<13> m16;
ap_int<10> m17;
ap_int<5> m18;
ap_int<7> m19;
ap_int<11> m20;
ap_int<8> m21;
ap_int<8> m22;
ap_int<16> m23;
ap_int<6> m24;
ap_int<4> m25;
ap_int<14> m26;
ap_int<11> m27;
ap_int<16> m28;
ap_int<6> m29;
ap_int<10> m30;
ap_int<13> m31;
ap_int<7> m32;
ap_int<15> m33;
ap_int<14> m34;
ap_int<16> m35;
ap_int<6> m36;
ap_int<4> m37;
ap_int<3> m38;
ap_int<9> m39;
ap_int<11> m40;
ap_int<5> m41;
ap_int<15> m42;
ap_int<5> m43;
ap_int<8> m44;
ap_int<6> m45;
ap_int<10> m46;
ap_int<12> m47;
ap_int<16> m48;
ap_int<13> m49;
ap_int<5> m50;
ap_int<16> m51;
ap_int<16> m52;
ap_int<8> m53;
ap_int<14> m54;
ap_int<9> m55;
ap_int<9> m56;
ap_int<10> m57;
ap_int<8> m58;
ap_int<5> m59;
ap_int<9> m60;
ap_int<7> m61;
ap_int<14> m62;
ap_int<7> m63;
ap_int<15> m64;
ap_int<10> m65;
ap_int<9> m66;
ap_int<16> m67;
ap_int<14> m68;
ap_int<6> m69;
ap_int<10> m70;
ap_int<13> m71;
ap_int<11> m72;
ap_int<11> m73;
ap_int<16> m74;
ap_int<14> m75;
ap_int<12> m76;
ap_int<7> m77;
ap_int<12> m78;
ap_int<12> m79;
ap_int<13> m80;
ap_int<12> m81;
ap_int<6> m82;
ap_int<5> m83;
ap_int<6> m84;
ap_int<15> m85;
ap_int<11> m86;
ap_int<16> m87;
ap_int<7> m88;
ap_int<9> m89;
ap_int<12> m90;
ap_int<11> m91;
ap_int<16> m92;
ap_int<12> m93;
ap_int<9> m94;
ap_int<10> m95;
ap_int<13> m96;
ap_int<8> m97;
ap_int<11> m98;
ap_int<6> m99;
ap_int<9> m100;
ap_int<6> m101;
ap_int<14> m102;
ap_int<6> m103;
ap_int<9> m104;
ap_int<8> m105;
ap_int<11> m106;
ap_int<5> m107;
ap_int<10> m108;
ap_int<11> m109;

m16 = in13 * in2;
m17 = in15 + in13;
m18 = in10 + in8;
m19 = in15 * m17;
m20 = in5 * in12;
m21 = in8 * in10;
m22 = in14 * m21;
m23 = in9 + in9;
m24 = in12 * m19;
m25 = m21 + in11;
m26 = m22 * m22;
m27 = m19 * in12;
m28 = m24 * m26;
m29 = m16 * m20;
m30 = m25 * m22;
m31 = m28 + m29;
m32 = m26 * m19;
m33 = m28 * m21;
m34 = m26 * m28;
m35 = m26 * m21;
m36 = m32 * m31;
m37 = m25 + m32;
m38 = m37 + m25;
m39 = m36 + m33;
m40 = m26 * m26;
m41 = m40 * m38;
m42 = m40 * m36;
m43 = m36 * m29;
m44 = m35 * m34;
m45 = m37 + m34;
m46 = m34 * m33;
m47 = m44 * m40;
m48 = m33 + m47;
m49 = m42 * m41;
m50 = m45 * m41;
m51 = m36 * m49;
m52 = m42 + m45;
m53 = m48 * m41;
m54 = m48 * m44;
m55 = m47 + m48;
m56 = m42 + m43;
m57 = m47 + m48;
m58 = m43 * m52;
m59 = m50 + m47;
m60 = m56 * m51;
m61 = m54 * m60;
m62 = m58 * m60;
m63 = m62 * m51;
m64 = m56 * m53;
m65 = m63 * m57;
m66 = m62 * m52;
m67 = m55 * m58;
m68 = m63 * m53;
m69 = m61 + m63;
m70 = m58 * m60;
m71 = m66 * m68;
m72 = m62 * m67;
m73 = m68 + m63;
m74 = m65 * m63;
m75 = m69 * m72;
m76 = m63 * m67;
m77 = m71 * m70;
m78 = m75 * m73;
m79 = m75 * m77;
m80 = m67 * m67;
m81 = m78 * m70;
m82 = m77 * m80;
m83 = m70 * m78;
m84 = m70 * m78;
m85 = m71 * m71;
m86 = m73 * m74;
m87 = m73 + m72;
m88 = m86 * m85;
m89 = m85 * m74;
m90 = m76 * m89;
m91 = m85 * m85;
m92 = m90 * m86;
m93 = m78 * m92;
m94 = m83 + m83;
m95 = m86 * m87;
m96 = m91 * m89;
m97 = m92 + m84;
m98 = m88 * m88;
m99 = m92 * m84;
m100 = m87 + m97;
m101 = m100 * m97;
m102 = m101 * m87;
m103 = m90 * m93;
m104 = m96 * m96;
m105 = m91 * m102;
m106 = m102 * m94;
m107 = m99 + m96;
m108 = m97 * m98;
m109 = m104 * m107;

out_data[0] = m18;
out_data[1] = m23;
out_data[2] = m27;
out_data[3] = m30;
out_data[4] = m39;
out_data[5] = m46;
out_data[6] = m59;
out_data[7] = m64;
out_data[8] = m79;
out_data[9] = m81;
out_data[10] = m82;
out_data[11] = m95;
out_data[12] = m103;
out_data[13] = m105;
out_data[14] = m106;
out_data[15] = m108;
out_data[16] = m109;


}
    