

#include <stdio.h>
#include "ap_fixed.h"

void case_22(
    ap_int<16> in_data[28],
    ap_int<16> out_data[20]
)
{

#pragma HLS array_partition variable=in_data complete
#pragma HLS array_partition variable=out_data complete

    

ap_int<14> in1;
in1.range(13, 0) = in_data[0].range(13, 0);
ap_int<10> in2;
in2.range(9, 0) = in_data[1].range(9, 0);
ap_int<7> in3;
in3.range(6, 0) = in_data[2].range(6, 0);
ap_int<16> in4;
in4.range(15, 0) = in_data[3].range(15, 0);
ap_int<12> in5;
in5.range(11, 0) = in_data[4].range(11, 0);
ap_int<3> in6;
in6.range(2, 0) = in_data[5].range(2, 0);
ap_int<12> in7;
in7.range(11, 0) = in_data[6].range(11, 0);
ap_int<4> in8;
in8.range(3, 0) = in_data[7].range(3, 0);
ap_int<12> in9;
in9.range(11, 0) = in_data[8].range(11, 0);
ap_int<10> in10;
in10.range(9, 0) = in_data[9].range(9, 0);
ap_int<8> in11;
in11.range(7, 0) = in_data[10].range(7, 0);
ap_int<16> in12;
in12.range(15, 0) = in_data[11].range(15, 0);
ap_int<11> in13;
in13.range(10, 0) = in_data[12].range(10, 0);
ap_int<15> in14;
in14.range(14, 0) = in_data[13].range(14, 0);
ap_int<5> in15;
in15.range(4, 0) = in_data[14].range(4, 0);
ap_int<7> in16;
in16.range(6, 0) = in_data[15].range(6, 0);
ap_int<15> in17;
in17.range(14, 0) = in_data[16].range(14, 0);
ap_int<2> in18;
in18.range(1, 0) = in_data[17].range(1, 0);
ap_int<3> in19;
in19.range(2, 0) = in_data[18].range(2, 0);
ap_int<12> in20;
in20.range(11, 0) = in_data[19].range(11, 0);
ap_int<15> in21;
in21.range(14, 0) = in_data[20].range(14, 0);
ap_int<14> in22;
in22.range(13, 0) = in_data[21].range(13, 0);
ap_int<14> in23;
in23.range(13, 0) = in_data[22].range(13, 0);
ap_int<12> in24;
in24.range(11, 0) = in_data[23].range(11, 0);
ap_int<6> in25;
in25.range(5, 0) = in_data[24].range(5, 0);
ap_int<2> in26;
in26.range(1, 0) = in_data[25].range(1, 0);
ap_int<9> in27;
in27.range(8, 0) = in_data[26].range(8, 0);
ap_int<9> in28;
in28.range(8, 0) = in_data[27].range(8, 0);

ap_int<10> m29;
ap_int<11> m30;
ap_int<14> m31;
ap_int<12> m32;
ap_int<4> m33;
ap_int<8> m34;
ap_int<13> m35;
ap_int<12> m36;
ap_int<12> m37;
ap_int<8> m38;
ap_int<15> m39;
ap_int<11> m40;
ap_int<8> m41;
ap_int<6> m42;
ap_int<6> m43;
ap_int<6> m44;
ap_int<13> m45;
ap_int<5> m46;
ap_int<9> m47;
ap_int<11> m48;
ap_int<8> m49;
ap_int<12> m50;
ap_int<7> m51;
ap_int<14> m52;
ap_int<12> m53;
ap_int<5> m54;
ap_int<14> m55;
ap_int<12> m56;
ap_int<13> m57;
ap_int<5> m58;
ap_int<9> m59;
ap_int<12> m60;
ap_int<6> m61;
ap_int<9> m62;
ap_int<7> m63;
ap_int<11> m64;
ap_int<4> m65;
ap_int<13> m66;
ap_int<9> m67;
ap_int<5> m68;
ap_int<14> m69;
ap_int<10> m70;
ap_int<8> m71;
ap_int<5> m72;
ap_int<8> m73;
ap_int<14> m74;
ap_int<16> m75;
ap_int<5> m76;
ap_int<13> m77;
ap_int<7> m78;
ap_int<15> m79;
ap_int<10> m80;
ap_int<7> m81;
ap_int<11> m82;
ap_int<4> m83;
ap_int<15> m84;
ap_int<5> m85;
ap_int<11> m86;
ap_int<7> m87;
ap_int<8> m88;
ap_int<11> m89;
ap_int<16> m90;
ap_int<8> m91;
ap_int<16> m92;
ap_int<9> m93;
ap_int<8> m94;
ap_int<7> m95;
ap_int<16> m96;
ap_int<7> m97;
ap_int<13> m98;
ap_int<5> m99;
ap_int<13> m100;
ap_int<16> m101;
ap_int<11> m102;
ap_int<5> m103;
ap_int<16> m104;
ap_int<11> m105;
ap_int<10> m106;
ap_int<8> m107;
ap_int<5> m108;
ap_int<16> m109;
ap_int<8> m110;
ap_int<7> m111;
ap_int<15> m112;
ap_int<10> m113;

m29 = in15 * in27;
m30 = in11 * in5;
m31 = in16 * in13;
m32 = in19 * in22;
m33 = m32 * in25;
m34 = in22 + in12;
m35 = in25 * in12;
m36 = m31 + m31;
m37 = in21 * in17;
m38 = m37 * in18;
m39 = m38 * m34;
m40 = m37 * in28;
m41 = in22 * in28;
m42 = in28 * m39;
m43 = m37 + in27;
m44 = in19 * m32;
m45 = m29 * m34;
m46 = in20 * m29;
m47 = m32 + m44;
m48 = in24 * in21;
m49 = in24 * m29;
m50 = m39 * m44;
m51 = m50 * m48;
m52 = m46 + m45;
m53 = m33 * in27;
m54 = m39 * m43;
m55 = m45 * m30;
m56 = m42 * m39;
m57 = m35 + m53;
m58 = m40 * m47;
m59 = m55 + m36;
m60 = m40 * m54;
m61 = m39 * m37;
m62 = m46 * m42;
m63 = m35 * m46;
m64 = m57 * m53;
m65 = m47 * m63;
m66 = m52 * m47;
m67 = m40 * m51;
m68 = m44 * m61;
m69 = m47 * m67;
m70 = m46 + m67;
m71 = m59 * m56;
m72 = m44 * m50;
m73 = m54 * m46;
m74 = m56 * m58;
m75 = m53 * m70;
m76 = m74 * m51;
m77 = m60 * m59;
m78 = m56 + m52;
m79 = m52 * m73;
m80 = m59 * m74;
m81 = m76 * m76;
m82 = m62 * m66;
m83 = m68 * m65;
m84 = m75 * m76;
m85 = m59 * m58;
m86 = m77 * m60;
m87 = m69 * m68;
m88 = m78 + m84;
m89 = m79 * m82;
m90 = m66 * m85;
m91 = m89 * m69;
m92 = m77 * m70;
m93 = m73 + m83;
m94 = m92 + m69;
m95 = m75 * m83;
m96 = m68 * m82;
m97 = m80 * m94;
m98 = m80 * m97;
m99 = m97 * m95;
m100 = m75 * m87;
m101 = m92 + m75;
m102 = m74 + m98;
m103 = m94 * m89;
m104 = m80 * m98;
m105 = m79 * m98;
m106 = m103 * m95;
m107 = m86 * m80;
m108 = m99 * m85;
m109 = m82 * m91;
m110 = m102 * m89;
m111 = m98 * m94;
m112 = m104 * m101;
m113 = m99 * m86;

out_data[0] = m41;
out_data[1] = m49;
out_data[2] = m64;
out_data[3] = m71;
out_data[4] = m72;
out_data[5] = m81;
out_data[6] = m88;
out_data[7] = m90;
out_data[8] = m93;
out_data[9] = m96;
out_data[10] = m100;
out_data[11] = m105;
out_data[12] = m106;
out_data[13] = m107;
out_data[14] = m108;
out_data[15] = m109;
out_data[16] = m110;
out_data[17] = m111;
out_data[18] = m112;
out_data[19] = m113;


}
    