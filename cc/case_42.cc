

#include <stdio.h>
#include "ap_fixed.h"

void case_42(
    ap_int<16> in_data[30],
    ap_int<16> out_data[19]
)
{

#pragma HLS array_partition variable=in_data complete
#pragma HLS array_partition variable=out_data complete

    

ap_int<5> in1;
in1.range(4, 0) = in_data[0].range(4, 0);
ap_int<4> in2;
in2.range(3, 0) = in_data[1].range(3, 0);
ap_int<10> in3;
in3.range(9, 0) = in_data[2].range(9, 0);
ap_int<5> in4;
in4.range(4, 0) = in_data[3].range(4, 0);
ap_int<13> in5;
in5.range(12, 0) = in_data[4].range(12, 0);
ap_int<4> in6;
in6.range(3, 0) = in_data[5].range(3, 0);
ap_int<9> in7;
in7.range(8, 0) = in_data[6].range(8, 0);
ap_int<7> in8;
in8.range(6, 0) = in_data[7].range(6, 0);
ap_int<14> in9;
in9.range(13, 0) = in_data[8].range(13, 0);
ap_int<16> in10;
in10.range(15, 0) = in_data[9].range(15, 0);
ap_int<13> in11;
in11.range(12, 0) = in_data[10].range(12, 0);
ap_int<7> in12;
in12.range(6, 0) = in_data[11].range(6, 0);
ap_int<2> in13;
in13.range(1, 0) = in_data[12].range(1, 0);
ap_int<2> in14;
in14.range(1, 0) = in_data[13].range(1, 0);
ap_int<9> in15;
in15.range(8, 0) = in_data[14].range(8, 0);
ap_int<7> in16;
in16.range(6, 0) = in_data[15].range(6, 0);
ap_int<4> in17;
in17.range(3, 0) = in_data[16].range(3, 0);
ap_int<4> in18;
in18.range(3, 0) = in_data[17].range(3, 0);
ap_int<2> in19;
in19.range(1, 0) = in_data[18].range(1, 0);
ap_int<11> in20;
in20.range(10, 0) = in_data[19].range(10, 0);
ap_int<9> in21;
in21.range(8, 0) = in_data[20].range(8, 0);
ap_int<3> in22;
in22.range(2, 0) = in_data[21].range(2, 0);
ap_int<16> in23;
in23.range(15, 0) = in_data[22].range(15, 0);
ap_int<9> in24;
in24.range(8, 0) = in_data[23].range(8, 0);
ap_int<15> in25;
in25.range(14, 0) = in_data[24].range(14, 0);
ap_int<7> in26;
in26.range(6, 0) = in_data[25].range(6, 0);
ap_int<6> in27;
in27.range(5, 0) = in_data[26].range(5, 0);
ap_int<6> in28;
in28.range(5, 0) = in_data[27].range(5, 0);
ap_int<4> in29;
in29.range(3, 0) = in_data[28].range(3, 0);
ap_int<7> in30;
in30.range(6, 0) = in_data[29].range(6, 0);

ap_int<6> m31;
ap_int<11> m32;
ap_int<6> m33;
ap_int<13> m34;
ap_int<8> m35;
ap_int<4> m36;
ap_int<16> m37;
ap_int<7> m38;
ap_int<11> m39;
ap_int<2> m40;
ap_int<8> m41;
ap_int<7> m42;
ap_int<7> m43;
ap_int<4> m44;
ap_int<11> m45;
ap_int<13> m46;
ap_int<14> m47;
ap_int<6> m48;
ap_int<10> m49;
ap_int<10> m50;
ap_int<11> m51;
ap_int<8> m52;
ap_int<6> m53;
ap_int<6> m54;
ap_int<11> m55;
ap_int<15> m56;
ap_int<6> m57;
ap_int<10> m58;
ap_int<16> m59;
ap_int<11> m60;
ap_int<15> m61;
ap_int<7> m62;
ap_int<10> m63;
ap_int<15> m64;
ap_int<6> m65;
ap_int<10> m66;
ap_int<4> m67;
ap_int<12> m68;
ap_int<5> m69;
ap_int<10> m70;
ap_int<11> m71;
ap_int<14> m72;
ap_int<12> m73;
ap_int<15> m74;
ap_int<7> m75;
ap_int<15> m76;
ap_int<8> m77;
ap_int<14> m78;
ap_int<4> m79;
ap_int<10> m80;
ap_int<8> m81;
ap_int<5> m82;
ap_int<14> m83;
ap_int<7> m84;
ap_int<6> m85;
ap_int<8> m86;
ap_int<15> m87;
ap_int<8> m88;
ap_int<11> m89;
ap_int<11> m90;
ap_int<14> m91;
ap_int<15> m92;
ap_int<9> m93;
ap_int<3> m94;
ap_int<3> m95;
ap_int<12> m96;
ap_int<11> m97;
ap_int<9> m98;
ap_int<9> m99;
ap_int<13> m100;
ap_int<6> m101;
ap_int<5> m102;
ap_int<12> m103;
ap_int<11> m104;
ap_int<13> m105;
ap_int<13> m106;
ap_int<8> m107;
ap_int<15> m108;
ap_int<8> m109;
ap_int<16> m110;
ap_int<11> m111;
ap_int<14> m112;
ap_int<7> m113;
ap_int<4> m114;
ap_int<13> m115;
ap_int<16> m116;
ap_int<14> m117;
ap_int<13> m118;
ap_int<4> m119;
ap_int<16> m120;
ap_int<7> m121;
ap_int<13> m122;
ap_int<6> m123;
ap_int<11> m124;
ap_int<4> m125;

m31 = in4 * in28;
m32 = in26 * in11;
m33 = in24 * in16;
m34 = in24 * in20;
m35 = m32 * in19;
m36 = m31 * m33;
m37 = m32 * m33;
m38 = in29 * in28;
m39 = in16 * m32;
m40 = in18 * in27;
m41 = in14 * m35;
m42 = m34 + in23;
m43 = in13 * in27;
m44 = in19 * m33;
m45 = m32 * m33;
m46 = m34 * m39;
m47 = in23 * in30;
m48 = in23 * m39;
m49 = m47 * m34;
m50 = m36 * in27;
m51 = in30 * m47;
m52 = m44 * in23;
m53 = m41 * m44;
m54 = m44 * m50;
m55 = m38 * m36;
m56 = m49 * m53;
m57 = m35 * m55;
m58 = in29 * m57;
m59 = m58 * m48;
m60 = m47 * m48;
m61 = m50 * m59;
m62 = m53 * m32;
m63 = m59 * m40;
m64 = m50 * m62;
m65 = m52 * m44;
m66 = m65 * m52;
m67 = m45 * m40;
m68 = m52 * m50;
m69 = m54 * m48;
m70 = m65 * m47;
m71 = m41 + m49;
m72 = m68 + m43;
m73 = m72 * m63;
m74 = m53 + m71;
m75 = m46 * m67;
m76 = m74 * m70;
m77 = m67 + m57;
m78 = m60 + m61;
m79 = m75 * m52;
m80 = m66 * m73;
m81 = m60 * m68;
m82 = m52 * m60;
m83 = m63 * m76;
m84 = m66 + m61;
m85 = m66 * m76;
m86 = m75 * m76;
m87 = m76 * m59;
m88 = m83 * m66;
m89 = m80 + m74;
m90 = m76 * m70;
m91 = m78 * m77;
m92 = m88 * m83;
m93 = m80 + m82;
m94 = m67 * m79;
m95 = m89 * m67;
m96 = m76 * m69;
m97 = m92 * m80;
m98 = m86 * m68;
m99 = m93 + m75;
m100 = m94 + m87;
m101 = m78 * m90;
m102 = m81 * m100;
m103 = m78 + m78;
m104 = m95 * m74;
m105 = m101 + m78;
m106 = m77 * m87;
m107 = m90 * m95;
m108 = m97 * m99;
m109 = m95 * m98;
m110 = m100 * m104;
m111 = m99 * m95;
m112 = m83 * m98;
m113 = m101 * m97;
m114 = m85 + m86;
m115 = m92 * m109;
m116 = m104 * m87;
m117 = m102 * m115;
m118 = m92 * m114;
m119 = m113 * m113;
m120 = m106 * m109;
m121 = m110 * m105;
m122 = m97 * m93;
m123 = m109 * m117;
m124 = m107 * m109;
m125 = m123 * m96;

out_data[0] = m37;
out_data[1] = m42;
out_data[2] = m51;
out_data[3] = m56;
out_data[4] = m64;
out_data[5] = m84;
out_data[6] = m91;
out_data[7] = m103;
out_data[8] = m108;
out_data[9] = m111;
out_data[10] = m112;
out_data[11] = m116;
out_data[12] = m118;
out_data[13] = m119;
out_data[14] = m120;
out_data[15] = m121;
out_data[16] = m122;
out_data[17] = m124;
out_data[18] = m125;


}
    