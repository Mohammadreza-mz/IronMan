

#include <stdio.h>
#include "ap_fixed.h"

void case_48(
    ap_int<16> in_data[12],
    ap_int<16> out_data[14]
)
{

#pragma HLS array_partition variable=in_data complete
#pragma HLS array_partition variable=out_data complete

    

ap_int<7> in1;
in1.range(6, 0) = in_data[0].range(6, 0);
ap_int<3> in2;
in2.range(2, 0) = in_data[1].range(2, 0);
ap_int<10> in3;
in3.range(9, 0) = in_data[2].range(9, 0);
ap_int<7> in4;
in4.range(6, 0) = in_data[3].range(6, 0);
ap_int<3> in5;
in5.range(2, 0) = in_data[4].range(2, 0);
ap_int<7> in6;
in6.range(6, 0) = in_data[5].range(6, 0);
ap_int<11> in7;
in7.range(10, 0) = in_data[6].range(10, 0);
ap_int<13> in8;
in8.range(12, 0) = in_data[7].range(12, 0);
ap_int<6> in9;
in9.range(5, 0) = in_data[8].range(5, 0);
ap_int<8> in10;
in10.range(7, 0) = in_data[9].range(7, 0);
ap_int<7> in11;
in11.range(6, 0) = in_data[10].range(6, 0);
ap_int<2> in12;
in12.range(1, 0) = in_data[11].range(1, 0);

ap_int<5> m13;
ap_int<10> m14;
ap_int<9> m15;
ap_int<12> m16;
ap_int<14> m17;
ap_int<11> m18;
ap_int<13> m19;
ap_int<8> m20;
ap_int<15> m21;
ap_int<9> m22;
ap_int<6> m23;
ap_int<10> m24;
ap_int<13> m25;
ap_int<16> m26;
ap_int<12> m27;
ap_int<16> m28;
ap_int<16> m29;
ap_int<14> m30;
ap_int<13> m31;
ap_int<10> m32;
ap_int<11> m33;
ap_int<11> m34;
ap_int<13> m35;
ap_int<6> m36;
ap_int<12> m37;
ap_int<7> m38;
ap_int<10> m39;
ap_int<7> m40;
ap_int<9> m41;
ap_int<16> m42;
ap_int<14> m43;
ap_int<7> m44;
ap_int<6> m45;
ap_int<10> m46;
ap_int<13> m47;
ap_int<7> m48;
ap_int<9> m49;
ap_int<9> m50;
ap_int<12> m51;
ap_int<11> m52;
ap_int<11> m53;
ap_int<10> m54;
ap_int<15> m55;
ap_int<12> m56;
ap_int<12> m57;
ap_int<13> m58;
ap_int<15> m59;
ap_int<13> m60;
ap_int<13> m61;
ap_int<9> m62;
ap_int<6> m63;
ap_int<6> m64;
ap_int<12> m65;
ap_int<13> m66;
ap_int<16> m67;
ap_int<11> m68;
ap_int<10> m69;
ap_int<11> m70;
ap_int<11> m71;
ap_int<8> m72;
ap_int<13> m73;
ap_int<14> m74;
ap_int<15> m75;
ap_int<16> m76;
ap_int<9> m77;
ap_int<11> m78;
ap_int<15> m79;
ap_int<9> m80;
ap_int<6> m81;
ap_int<7> m82;
ap_int<13> m83;
ap_int<8> m84;
ap_int<15> m85;
ap_int<13> m86;
ap_int<13> m87;
ap_int<11> m88;
ap_int<16> m89;
ap_int<14> m90;
ap_int<15> m91;
ap_int<7> m92;
ap_int<13> m93;
ap_int<13> m94;
ap_int<12> m95;
ap_int<9> m96;
ap_int<10> m97;
ap_int<13> m98;
ap_int<6> m99;
ap_int<11> m100;
ap_int<15> m101;
ap_int<11> m102;
ap_int<5> m103;
ap_int<14> m104;
ap_int<5> m105;
ap_int<9> m106;
ap_int<11> m107;
ap_int<13> m108;
ap_int<14> m109;
ap_int<12> m110;
ap_int<10> m111;
ap_int<13> m112;
ap_int<12> m113;
ap_int<8> m114;
ap_int<11> m115;
ap_int<9> m116;

m13 = in12 * in9;
m14 = in2 + in11;
m15 = in9 * in7;
m16 = m13 * in8;
m17 = in7 * m16;
m18 = m14 * in8;
m19 = m14 + m15;
m20 = m17 + m15;
m21 = m17 * in9;
m22 = m14 + m19;
m23 = m15 * m16;
m24 = m19 * m21;
m25 = m24 * m21;
m26 = m14 * m16;
m27 = m18 * m19;
m28 = m17 * m19;
m29 = m26 + m22;
m30 = m25 * m28;
m31 = m19 + m29;
m32 = m21 + m23;
m33 = m21 * m24;
m34 = m28 * m27;
m35 = m25 * m25;
m36 = m30 * m34;
m37 = m25 * m28;
m38 = m26 * m30;
m39 = m37 + m38;
m40 = m32 * m29;
m41 = m31 * m37;
m42 = m38 * m35;
m43 = m31 * m37;
m44 = m32 + m36;
m45 = m42 * m33;
m46 = m41 + m44;
m47 = m40 * m37;
m48 = m40 + m36;
m49 = m45 + m43;
m50 = m43 * m40;
m51 = m40 * m42;
m52 = m40 * m51;
m53 = m43 * m44;
m54 = m49 * m50;
m55 = m52 * m47;
m56 = m51 * m47;
m57 = m55 * m47;
m58 = m49 * m57;
m59 = m51 * m50;
m60 = m52 * m50;
m61 = m53 + m54;
m62 = m61 * m57;
m63 = m58 * m58;
m64 = m59 * m63;
m65 = m57 * m55;
m66 = m55 * m61;
m67 = m65 * m55;
m68 = m57 * m61;
m69 = m59 + m59;
m70 = m66 * m65;
m71 = m63 + m69;
m72 = m67 * m71;
m73 = m68 * m70;
m74 = m70 + m70;
m75 = m68 * m72;
m76 = m75 * m73;
m77 = m75 * m65;
m78 = m66 + m77;
m79 = m72 * m76;
m80 = m74 * m72;
m81 = m78 + m73;
m82 = m81 + m80;
m83 = m76 * m71;
m84 = m81 * m80;
m85 = m74 * m82;
m86 = m80 + m85;
m87 = m75 * m80;
m88 = m79 * m86;
m89 = m83 * m81;
m90 = m79 * m87;
m91 = m82 * m79;
m92 = m90 * m86;
m93 = m88 * m92;
m94 = m89 * m86;
m95 = m87 * m88;
m96 = m85 + m94;
m97 = m94 + m95;
m98 = m88 * m90;
m99 = m90 * m93;
m100 = m97 * m96;
m101 = m96 * m93;
m102 = m93 + m90;
m103 = m92 * m91;
m104 = m92 * m96;
m105 = m94 * m103;
m106 = m98 * m105;
m107 = m105 * m102;
m108 = m102 * m105;
m109 = m100 + m107;
m110 = m107 * m109;
m111 = m100 * m99;
m112 = m106 * m110;
m113 = m108 * m104;
m114 = m113 + m105;
m115 = m109 + m103;
m116 = m107 * m111;

out_data[0] = m20;
out_data[1] = m39;
out_data[2] = m46;
out_data[3] = m48;
out_data[4] = m56;
out_data[5] = m60;
out_data[6] = m62;
out_data[7] = m64;
out_data[8] = m84;
out_data[9] = m101;
out_data[10] = m112;
out_data[11] = m114;
out_data[12] = m115;
out_data[13] = m116;


}
    